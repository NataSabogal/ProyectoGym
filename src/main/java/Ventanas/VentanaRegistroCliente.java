/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventanas;

import Controllers.ClienteController;
import Controllers.PlanIAController;
import Controllers.PlanMembresiaController;
import DTO.ClienteDTO;
import DTO.PlanMembresiaDTO;
import Repository.PlanIARepository;
import Services.PlanIAService;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author nataliasabogalrada
 */
public class VentanaRegistroCliente extends javax.swing.JFrame {

    /**
     * Creates new form VentanaRegistro
     */
    private ClienteController clienteController;
    private PlanMembresiaController planMembresiaController;
    private ClienteDTO clienteBuscar;

    public VentanaRegistroCliente() {
        initComponents();
        clienteController = new ClienteController();
        planMembresiaController = new PlanMembresiaController();
        this.cargarPlanesEnComboBox();
        clienteBuscar = new ClienteDTO();
        montoPagoConCombo();
        txtAreaIA.setLineWrap(true); // Ajusta automáticamente el texto al ancho del área
        txtAreaIA.setWrapStyleWord(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        btnBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnAtrasRegistro = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMontoPago = new javax.swing.JTextField();
        cbx = new javax.swing.JComboBox<>();
        jDateFechaPago = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        txtObjetivo = new javax.swing.JTextField();
        btnIa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaIA = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Shree Devanagari 714", 0, 18))); // NOI18N

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Shree Devanagari 714", 1, 14)); // NOI18N
        jLabel1.setText("Nombre: ");

        jLabel2.setFont(new java.awt.Font("Shree Devanagari 714", 1, 14)); // NOI18N
        jLabel2.setText("Cédula:");

        jLabel3.setFont(new java.awt.Font("Shree Devanagari 714", 1, 14)); // NOI18N
        jLabel3.setText("Plan Membresía:");

        jLabel4.setFont(new java.awt.Font("Shree Devanagari 714", 1, 14)); // NOI18N
        jLabel4.setText("Correo:");

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("Editar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnAtrasRegistro.setText("⤺");
        btnAtrasRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasRegistroActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Shree Devanagari 714", 1, 14)); // NOI18N
        jLabel5.setText("Telefono:");

        jLabel6.setFont(new java.awt.Font("Shree Devanagari 714", 1, 14)); // NOI18N
        jLabel6.setText("Fecha de Pago:");

        jLabel7.setFont(new java.awt.Font("Shree Devanagari 714", 1, 14)); // NOI18N
        jLabel7.setText("Monto de Pago:");

        txtMontoPago.setEditable(false);

        cbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Shree Devanagari 714", 1, 14)); // NOI18N
        jLabel8.setText("Objetivo:");

        btnIa.setText("Sugerir Plan con IA ");
        btnIa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIaActionPerformed(evt);
            }
        });

        txtAreaIA.setEditable(false);
        txtAreaIA.setColumns(20);
        txtAreaIA.setRows(5);
        jScrollPane1.setViewportView(txtAreaIA);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAtrasRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(57, 57, 57)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cbx, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtMontoPago, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateFechaPago, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                                    .addComponent(txtObjetivo)))
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                        .addComponent(txtCorreo)
                                        .addComponent(txtNombre))
                                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnIa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnAtrasRegistro)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(23, 23, 23)
                                .addComponent(jLabel4)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel2))
                                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtObjetivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 12, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jDateFechaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMontoPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnIa, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String nombre = txtNombre.getText();
        String correo = txtCorreo.getText();
        String telefono = txtTelefono.getText();
        String cedula = txtCedula.getText();
        String objetivo = txtObjetivo.getText();
        java.util.Date fechaUtil = jDateFechaPago.getDate();
        java.sql.Date fechaPago = (fechaUtil != null) ? new java.sql.Date(fechaUtil.getTime()) : null;
        String montoPago = txtMontoPago.getText();
        String planSeleccionado = (String) cbx.getSelectedItem();

        if (planSeleccionado != null && !planSeleccionado.equals("Seleccionar")) {
            PlanMembresiaDTO planSeleccionadoDTO = planMembresiaController.buscarPlan(planSeleccionado);

            if (nombre.isEmpty() || correo.isEmpty() || telefono.isEmpty() || cedula.isEmpty() || objetivo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.");
                return;
            }

            if (planSeleccionadoDTO == null || planSeleccionadoDTO.getId() == 0) {
                JOptionPane.showMessageDialog(this, "Seleccione un plan de membresía válido.");
                return;
            }

            if (fechaPago == null) {
                JOptionPane.showMessageDialog(this, "La fecha de pago es obligatoria.");
                return;
            }
            try {
                ClienteDTO cliente = new ClienteDTO(cedula, nombre, correo, telefono,
                        planSeleccionadoDTO.getId(), fechaPago, Double.parseDouble(montoPago), objetivo);

                cliente.setObjetivo(objetivo);

                if (clienteController.registrarCliente(cliente)) {
                    JOptionPane.showMessageDialog(this, "Cliente registrado exitosamente.");
                    limpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(this, "Error al registrar el cliente.");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "El monto de pago debe ser un número válido.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un plan de membresía.");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String cedula = txtCedula.getText();
        this.clienteBuscar = clienteController.buscarCliente(cedula);

        if (this.clienteBuscar != null) {
            txtNombre.setText(this.clienteBuscar.getNombre());
            txtCorreo.setText(this.clienteBuscar.getCorreo());
            txtTelefono.setText(this.clienteBuscar.getTelefono());
            txtObjetivo.setText(this.clienteBuscar.getObjetivo());
            txtMontoPago.setText(this.clienteBuscar.getMontoPago() + "");
            int planId = this.clienteBuscar.getPlanId();
            PlanMembresiaDTO planMembresia = planMembresiaController.buscarPlanPorId(planId);

            if (planMembresia != null) {
                cbx.setSelectedItem(planMembresia.getNombre());
            } else {
                cbx.setSelectedIndex(0);
            }
            if (this.clienteBuscar.getFechaPago() != null) {
                jDateFechaPago.setDate(this.clienteBuscar.getFechaPago());
            }
            JOptionPane.showMessageDialog(this, "Cliente encontrado.");
        } else {
            JOptionPane.showMessageDialog(this, "Cliente no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAtrasRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasRegistroActionPerformed
        // TODO add your handling code here:
        VentanaDashBoard panel = new VentanaDashBoard();
        panel.setVisible(true);
        panel.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_btnAtrasRegistroActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String cedula = txtCedula.getText();
        boolean eliminado = clienteController.eliminarCliente(cedula);

        if (eliminado) {
            JOptionPane.showMessageDialog(this, "Cliente eliminado con éxito.");
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "Error al eliminar el Cliente.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (this.clienteBuscar == null) {
            JOptionPane.showMessageDialog(this, "Primero debe buscar un cliente para modificar.");
            return;
        }
        try {
            String cedula = txtCedula.getText();
            String nombre = txtNombre.getText();
            String correo = txtCorreo.getText();
            String telefono = txtTelefono.getText();
            String objetivo = txtObjetivo.getText();

            java.util.Date fechaUtil = jDateFechaPago.getDate();
            java.sql.Date fechaPago = (fechaUtil != null) ? new java.sql.Date(fechaUtil.getTime()) : null;

            double montoPago = 0;
            try {
                montoPago = Double.parseDouble(txtMontoPago.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "El monto de pago debe ser un número válido.");
                return;
            }

            String planSeleccionado = (String) cbx.getSelectedItem();
            if (planSeleccionado == null || planSeleccionado.equals("Seleccionar") || planSeleccionado.equals("No hay planes disponibles")) {
                JOptionPane.showMessageDialog(this, "Seleccione un plan de membresía válido.");
                return;
            }

            PlanMembresiaDTO planSeleccionadoDTO = planMembresiaController.buscarPlan(planSeleccionado);
            if (planSeleccionadoDTO == null || planSeleccionadoDTO.getId() == 0) {
                JOptionPane.showMessageDialog(this, "Error al obtener el plan de membresía seleccionado.");
                return;
            }

            if (nombre.isEmpty() || correo.isEmpty() || telefono.isEmpty() || cedula.isEmpty() || objetivo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.");
                return;
            }

            if (fechaPago == null) {
                JOptionPane.showMessageDialog(this, "La fecha de pago es obligatoria.");
                return;
            }
            ClienteDTO clienteActualizar = this.clienteBuscar;
            clienteActualizar.setCedula(cedula);
            clienteActualizar.setNombre(nombre);
            clienteActualizar.setCorreo(correo);
            clienteActualizar.setTelefono(telefono);
            clienteActualizar.setObjetivo(objetivo);
            clienteActualizar.setFechaPago(fechaPago);
            clienteActualizar.setMontoPago(montoPago);
            clienteActualizar.setPlanId(planSeleccionadoDTO.getId());

            boolean actualizado = clienteController.actualizarCliente(clienteActualizar);
            if (actualizado) {
                JOptionPane.showMessageDialog(this, "Cliente actualizado con éxito.");
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "Error al actualizar el cliente", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al procesar la actualización: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();


        }    }//GEN-LAST:event_btnModificarActionPerformed

    private void cbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxActionPerformed
    private void btnIaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIaActionPerformed
        String objetivo = txtObjetivo.getText();
        try {
            PlanIAController controladorIA = new PlanIAController(
                    new PlanIAService(new PlanIARepository()),
                    new PlanMembresiaController()
            );

            // Obtener el mensaje final
            String mensaje = controladorIA.obtenerMensajeSugerencia(objetivo);
            txtAreaIA.setText(mensaje);
            //JOptionPane.showMessageDialog(null, mensaje, "Sugerencia de Plan", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIaActionPerformed

    /**
     * @param args the command line arguments
     */
    private void cargarPlanesEnComboBox() {
        cbx.removeAllItems();
        List<PlanMembresiaDTO> listaPlanes = planMembresiaController.obtenerTodosPlanes();
        if (listaPlanes != null && !listaPlanes.isEmpty()) {
            cbx.addItem("Seleccionar");
            for (PlanMembresiaDTO plan : listaPlanes) {
                cbx.addItem(plan.getNombre());
            }
        } else {
            cbx.addItem("No hay planes disponibles");
        }
    }

    public void montoPagoConCombo() {
        cbx.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String planSeleccionado = (String) cbx.getSelectedItem();
                if (planSeleccionado != null && !planSeleccionado.equals("Seleccionar") && !planSeleccionado.equals("No hay planes disponibles")) {
                    try {
                        PlanMembresiaDTO plan = planMembresiaController.buscarPlan(planSeleccionado);
                        if (plan != null) {
                            txtMontoPago.setText(String.valueOf(plan.getPrecio()));
                            txtMontoPago.setEditable(false);
                        }
                    } catch (Exception e) {
                        System.err.println("Error al obtener precio del plan: " + e.getMessage());
                        e.printStackTrace();
                    }
                } else {
                    txtMontoPago.setText("");
                    txtMontoPago.setEditable(true);
                }
            }
        });
    }

    public void limpiarCampos() {
        txtCedula.setText("");
        txtCorreo.setText("");
        jDateFechaPago.setDate(null);
        txtMontoPago.setText("");
        txtNombre.setText("");
        txtTelefono.setText("");
        txtObjetivo.setText("");
        cbx.setSelectedIndex(0);
        txtAreaIA.setText("");
        
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroCliente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroCliente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroCliente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroCliente.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaRegistroCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAtrasRegistro;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnIa;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cbx;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateFechaPago;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAreaIA;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtMontoPago;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtObjetivo;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
